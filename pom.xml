<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>net.taptech</groupId>
	<artifactId>demo-mule-spring-boot</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>demo-mule-spring-boot</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.9.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<mule.version>3.9.0</mule.version>
		<dockerfile-maven-version>1.3.6</dockerfile-maven-version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>net.taptech</groupId>
			<artifactId>mule-spring-boot-starter</artifactId>
			<version>1.0.0</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
			<version>2.1.1.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-http</artifactId>
			<version>${mule.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-vm</artifactId>
			<version>${mule.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-module-json</artifactId>
			<version>${mule.version}</version>
			<!--
			<exclusions>
				<exclusion>
					<artifactId>spring-context</artifactId>
					<groupId>org.springframework</groupId>
				</exclusion>

				<exclusion>
					<artifactId>spring-beans</artifactId>
					<groupId>org.springframework</groupId>
				</exclusion>
				<exclusion>
					<artifactId>mule-module-spring-config</artifactId>
					<groupId>org.mule.modules</groupId>
				</exclusion>
			</exclusions>
			-->
		</dependency>

		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-clients</artifactId>
			<version>1.0.0</version>
		</dependency>

		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-streams</artifactId>
			<version>1.0.0</version>
		</dependency>

		<dependency>
			<groupId>net.taptech</groupId>
			<artifactId>mule-kafka-connector</artifactId>
			<version>1.2.1-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>org.mule.tools.devkit</groupId>
			<artifactId>mule-devkit-maven-plugin</artifactId>
			<version>${mule.version}</version>
		</dependency>

		<!-- Optional dependencies for using Spock and Groovy-->

		<dependency>
			<groupId>org.spockframework</groupId>
			<artifactId>spock-core</artifactId>
			<version>1.1-groovy-2.3</version>
			<scope>test</scope>
		</dependency>

        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>2.4.4</version>
        </dependency>

		<dependency> <!-- enables mocking of classes (in addition to interfaces) -->
			<groupId>net.bytebuddy</groupId>
			<artifactId>byte-buddy</artifactId>
			<version>1.6.5</version>
			<scope>test</scope>
		</dependency>
		<dependency> <!-- enables mocking of classes without default constructor (together with CGLIB) -->
			<groupId>org.objenesis</groupId>
			<artifactId>objenesis</artifactId>
			<version>2.5.1</version>
			<scope>test</scope>
		</dependency>
		<dependency> <!-- only required if Hamcrest matchers are used -->
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.avro</groupId>
			<artifactId>avro</artifactId>
			<version>1.8.2</version>
		</dependency>
		<dependency>
			<groupId>tech.allegro.schema.json2avro</groupId>
			<artifactId>converter</artifactId>
			<version>0.2.5</version>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>Central</id>
			<name>Central</name>
			<url>http://repo1.maven.org/maven2/</url>
			<layout>default</layout>
		</repository>
		<repository>
			<id>mulesoft-releases</id>
			<name>MuleSoft Repository</name>
			<url>http://repository.mulesoft.org/releases/</url>
			<layout>default</layout>
		</repository>
		<repository>
			<id>mulesoft-snapshots</id>
			<name>MuleSoft Snapshot Repository</name>
			<url>http://repository.mulesoft.org/snapshots/</url>
			<layout>default</layout>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones Repository</name>
			<url>http://repo.spring.io/milestone</url>
			<layout>default</layout>
		</repository>
		<repository>
			<id>spock-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>

	</repositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<compilerId>groovy-eclipse-compiler</compilerId>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-eclipse-compiler</artifactId>
						<version>2.9.1-01</version>
					</dependency>
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-eclipse-batch</artifactId>
						<version>2.3.7-01</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>fabric8-maven-plugin</artifactId>
				<version>3.5.37</version>
				<configuration>
					<images>
						<image>
							<alias>service</alias>
							<name>fabric8/docker-demo:${project.version}</name>

							<build>
								<from>java:8</from>
								<cmd>
									<shell>java -jar /maven/service.jar</shell>
								</cmd>
							</build>

						</image>

					</images>
				</configuration>
			</plugin>
			<!-- gregorylawson.net:5043/repository/taptech-docker:demo-mule-spring-boot-0.0.1-SNAPSHOT is final docker image-->
		</plugins>
	</build>


	<profiles>
		<profile>
			<id>test</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.1</version>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<echo>Using env.test.properties</echo>
										<copy file="src/main/resources/env.test.properties"
											  tofile="${project.build.outputDirectory}
                                 /env.properties"/>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>dockerfile-maven-plugin</artifactId>
						<version>${dockerfile-maven-version}</version>
						<executions>
							<execution>
								<id>default</id>
								<goals>
									<goal>build</goal>
									<goal>push</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<googleContainerRegistryEnabled>false</googleContainerRegistryEnabled>
							<verbose>true</verbose>
							<repository>gregorylawson.net:5043/repository/taptech-docker</repository>
							<tag>latest</tag>
							<useMavenSettingsForAuth>true</useMavenSettingsForAuth>
							<tag>${project.version}</tag>
							<buildArgs>
								<JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
							</buildArgs>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
